<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo + github 个人博客使用</title>
    <url>/2020/06/10/hexo%E5%8D%9A%E5%AE%A2%E7%BC%96%E8%BE%91%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>hexo 是一个快速、简洁且高效的博客框架，采用 Node.js，使得网页资源的渲染更加快速。Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。 </p>
<a id="more"></a>


<h1 id="一、相关指令学习"><a href="#一、相关指令学习" class="headerlink" title="一、相关指令学习"></a>一、相关指令学习</h1><p><strong>1. init</strong><br><code>$ hexo init [folder]</code><br>新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。</p>
<p><strong>2. new</strong><br><code>$ hexo new [layout] &lt;title&gt;</code><br>参数|描述<br>–|:–:|-:<br>layout|page所使用的模板<br>title|page的标题<br>-p/–path|自定义新文章的路径<br>-r/–replace|如果存在同名文章，将其替换<br>-s/–slug|文章的Slug，作为新文章的文件名和发布后的URL</p>
<p><code>$ hexo new page --path about/me &quot;About me&quot;</code><br>创建一个 source/about/me.md 文件，同时 Front Matter 中的 title 为 “About me”</p>
<p>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</p>
<p><strong>3. generate</strong><br><code>$ hexo generate</code>（也可写做<code>$ hexo g</code>）<br>生成静态文件</p>
<p>参数|描述<br>–|:-:|-:<br>-d/–deploy|文件生成后立即部署网站<br>-w/–watch|监视文件变动<br>-b/–bail|生成过程中如果发生任何未处理的异常则抛出异常<br>-f/–force|强制重新生成文件。Hexo引入了差分机制，如果 public 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code><br>-c/–concurrency|最大同时生成文件的数量，默认无限制</p>
<p><strong>4. publish</strong><br><code>$ hexo publish [layout] &lt;filename&gt;</code><br>发表草稿</p>
<p><strong>5. server</strong><br><code>$ hexo server</code><br>启动服务器。默认情况下，访问网址为：<a href="http://localhost:400/" target="_blank" rel="noopener">http://localhost:400/</a> 。</p>
<p>参数|描述<br>-|:-:|-:<br>-p/–port|重设端口<br>-s/–static|只使用静态文件<br>-l/–log|启动日记记录，使用覆盖记录格式</p>
<p><strong>6. deploy</strong><br><code>$ hexo deploy</code>（可写做 <code>$ hexo d</code>）<br>部署网站<br>参数|描述<br>-|:-:|-:<br>-g/–generate|部署之前预先生成静态文件<br><strong>7. clean</strong><br><code>$ hexo clean</code><br>清除缓存文件 （db.json）和已生成的静态文件 （public）.<br>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令</p>
<h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h1 id="又是一个一级标题"><a href="#又是一个一级标题" class="headerlink" title="又是一个一级标题"></a>又是一个一级标题</h1>]]></content>
      <categories>
        <category>技术杂文</category>
      </categories>
      <tags>
        <tag>hexo, github</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/05/15/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<a id="more"></a>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>测试博文</title>
    <url>/2020/05/31/%E6%B5%8B%E8%AF%95%E5%8D%9A%E6%96%87/</url>
    <content><![CDATA[<p>此篇博文旨在测试一下利用 hexo 编写并上传博文后的结果，以下纯属胡编：<br>屋檐如悬崖，风铃如沧海，我等燕归来；<br>时间被安排，演一场意外，你悄然走开；<br>浓雾散不开，风声不存在，是我在感慨；<br>梦醒来是谁在窗台，把结局打开；<br>那薄如蝉翼的未来，经不起谁来拆；</p>
<a id="more"></a>

<h1 id="我送你离开天涯之外你是否还在；"><a href="#我送你离开天涯之外你是否还在；" class="headerlink" title="我送你离开天涯之外你是否还在；"></a>我送你离开天涯之外你是否还在；</h1><p>  琴声何来生死难猜用一生去等待；</p>
<h2 id="闻泪声入林寻梨花白只得一行青苔；"><a href="#闻泪声入林寻梨花白只得一行青苔；" class="headerlink" title="闻泪声入林寻梨花白只得一行青苔；"></a>闻泪声入林寻梨花白只得一行青苔；</h2><p>  。。。。。。</p>
]]></content>
      <categories>
        <category>技术杂文</category>
      </categories>
      <tags>
        <tag>hexo, github搭建博客</tag>
      </tags>
  </entry>
  <entry>
    <title>x1 carbon 5th睡眠唤醒后的ACPI错误解决</title>
    <url>/2020/06/10/x1-carbon-5th%E7%9D%A1%E7%9C%A0%E5%94%A4%E9%86%92%E5%90%8E%E7%9A%84ACPI%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<p>本人的机器是x1 carbon 2017,自己换上了免驱黑果卡bcm94360cs2,经过不断地爬帖子，逛论坛，不断地自我完善，从clover到OC，一步一步的渐渐完善了。期间先是看宪武大佬和小兵维护的P-little，然后转战OC，参考了OC-little。在打完OC-little的补丁以后，机器包括睡眠、触控板都挺正常的。唯一一点就是存在几处的 ACPI 错误。下面我对 ACPI 错误进行了定位与解决。</p>
<a id="more"></a>


<h1 id="一、-定位错误"><a href="#一、-定位错误" class="headerlink" title="一、 定位错误"></a>一、 定位错误</h1><p>基本上开机以后，终端输入指令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">log</span> show --last boot | grep -Ei <span class="string">"ACPI"</span> | grep Error</span><br></pre></td></tr></table></figure>

<p>以后，是没有显示有 ACPI 错误的，如下图：<br><img src="/2020/06/10/x1-carbon-5th%E7%9D%A1%E7%9C%A0%E5%94%A4%E9%86%92%E5%90%8E%E7%9A%84ACPI%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/1.png" alt></p>
<p>但是机器睡眠重新唤醒以后，再次的终端输入指令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">log</span> show --last boot | grep -Ei <span class="string">"ACPI"</span> | grep Error</span><br></pre></td></tr></table></figure>

<p>终端显示机器出现了 ACPI 错误，但是没有具体的消息。于是我们使用黑苹果神器 hackintool 进行查错，进入 hackintool 里的日志&gt;&gt;系统，然后点击刷新按钮，显示系统启动的信息：<br><img src="/2020/06/10/x1-carbon-5th%E7%9D%A1%E7%9C%A0%E5%94%A4%E9%86%92%E5%90%8E%E7%9A%84ACPI%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/2.png" alt></p>
<p>然后我们快捷方式 ALT+F 输入 ACPI ERROR 进行定位错误的位置，如下图：<br><img src="/2020/06/10/x1-carbon-5th%E7%9D%A1%E7%9C%A0%E5%94%A4%E9%86%92%E5%90%8E%E7%9A%84ACPI%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/3.png" alt></p>
<p>然后我们发现是函数 OWAK 执行错误，但是仅仅这个信息还不能帮助我们改错，我们继续查看系统启动日志，更详细的定位错误。我们发现日志里 SB.PCI0.LPCB.EC.HWAC 变量导致了函数 OWAK 执行错误，如下图：<br><img src="/2020/06/10/x1-carbon-5th%E7%9D%A1%E7%9C%A0%E5%94%A4%E9%86%92%E5%90%8E%E7%9A%84ACPI%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/4.png" alt></p>
<p>于是我们打开之前自己提取的机器的 DSDT，然后 ALT+F 搜索 变量 HWAC,如下图：<br><img src="/2020/06/10/x1-carbon-5th%E7%9D%A1%E7%9C%A0%E5%94%A4%E9%86%92%E5%90%8E%E7%9A%84ACPI%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/5.png" alt></p>
<p>然后我发现这个变量是有关电池补丁的（可以参考这个大佬的有关电池补丁相关帖子 <a href="http://bbs.pcbeta.com/forum.php?...=1778499&amp;highlight=" target="_blank" rel="noopener">http://bbs.pcbeta.com/forum.php?...=1778499&amp;highlight=</a> ），按理说这个 16位变量 HWAC 超过了8位，应该要拆分的。</p>
<h1 id="二、解决错误"><a href="#二、解决错误" class="headerlink" title="二、解决错误"></a>二、解决错误</h1><h2 id="1-相关变量-HWAC-的拆分"><a href="#1-相关变量-HWAC-的拆分" class="headerlink" title="1.相关变量 HWAC 的拆分"></a>1.相关变量 HWAC 的拆分</h2><p>然后我打开 OC-little 里的电池补丁 SSDT-OCBAT0-TP_re80_tx70-80_x1c5th-6th_s12017_p51.aml 查看，并没有对此变量进行拆分（这里推测可能每个机器不同，也或者这个变量改不改不会影响机器的正常运作，只会显示有ACPI ERROR，所以大佬没有去改，其实自己改完了后发现工作量也挺大的）。然后自己就对 OC-little 里的电池补丁进行修改：<br><img src="/2020/06/10/x1-carbon-5th%E7%9D%A1%E7%9C%A0%E5%94%A4%E9%86%92%E5%90%8E%E7%9A%84ACPI%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/6.png" alt></p>
<p>将变量 HWAC 按照语法拆分为 WAC0 和 WAC1。</p>
<h2 id="2-相关函数-OWAK-的重写"><a href="#2-相关函数-OWAK-的重写" class="headerlink" title="2.相关函数 OWAK 的重写"></a>2.相关函数 OWAK 的重写</h2><p>然后接下来就是对 OWAK函数进行重写，为了路径方便，将 OWAK函数写在了 OC-little 的睡眠补丁 SSDT-PTSWAK.aml 里：<br><img src="/2020/06/10/x1-carbon-5th%E7%9D%A1%E7%9C%A0%E5%94%A4%E9%86%92%E5%90%8E%E7%9A%84ACPI%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/7.png" alt></p>
<p>如上图，就这里用到 变量HWAC 的一句代码使用拆分函数 B1B2()（！！！！注意：OC引导的 config 配置里，电池补丁一定要在这个补丁之前加载，有调用关系）。然后接下来就是烦人的工作，加外部引用排错。。。。。。。。。</p>
<p>调试完了后，如下图，加了这么多的外部引用，身心俱疲啊：<br><img src="/2020/06/10/x1-carbon-5th%E7%9D%A1%E7%9C%A0%E5%94%A4%E9%86%92%E5%90%8E%E7%9A%84ACPI%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/8.png" alt></p>
<h2 id="3-原函数的重命名"><a href="#3-原函数的重命名" class="headerlink" title="3.原函数的重命名"></a>3.原函数的重命名</h2><p>到了这里， OWAK 函数总算搞定，但是这样会和系统原来的 OWAK 函数产生冲突，所以还需要改名，这里自己将系统原来的 OWAK 函数改为 QWAK（找一个和原来 DSDT 表里的变量不冲突的就行，具体判断是不是存在搜索一下就行了），然后利用 hackintool 里的计算器进行 ASCII 和十六进制的转换，并把更名写到 系统 EFI 分区的 配置文件 config.plist 里<br><img src="/2020/06/10/x1-carbon-5th%E7%9D%A1%E7%9C%A0%E5%94%A4%E9%86%92%E5%90%8E%E7%9A%84ACPI%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/9.png" alt></p>
<h1 id="三、最后测试"><a href="#三、最后测试" class="headerlink" title="三、最后测试"></a>三、最后测试</h1><p>最后重启，进行验证一下（重启之前，做好EFI文件的备份工作，不然出事儿了毁一生啊。。。。。。。）<br>重启完，打开终端进行查 ACPI 错:<br><img src="/2020/06/10/x1-carbon-5th%E7%9D%A1%E7%9C%A0%E5%94%A4%E9%86%92%E5%90%8E%E7%9A%84ACPI%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/10.png" alt></p>
<p>然后再次进行睡眠，并唤醒操作，查看有无 ACPI 错误：<br><img src="/2020/06/10/x1-carbon-5th%E7%9D%A1%E7%9C%A0%E5%94%A4%E9%86%92%E5%90%8E%E7%9A%84ACPI%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/11.png" alt></p>
<p>从上图可以看到，睡眠过后已经没有 ACPI 错误了，强迫症终于把这个 ACPI 错误 却掉了。。。。。。</p>
<p>（以上的帖子纯属自己在前人的教程基础上进行的学习和探索过程，如有错误和不对的地方请大佬指正</p>
<h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1>]]></content>
      <categories>
        <category>黑苹果</category>
      </categories>
      <tags>
        <tag>黑苹果, ACPI 排错</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习一</title>
    <url>/2020/07/03/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%80/</url>
    <content><![CDATA[<p>机器学习通过计算机语言来挖掘数据背后的秘密。人们无法从海量的数据中提取有用的信息，这时候需要借助计算机的超强算力，这就衍生了机器学习这们技术。机器学习常用于以下几个领域：</p>
<a id="more"></a>
<ul>
<li>人脸识别</li>
<li>手写字体识别</li>
<li>垃圾邮件过滤</li>
<li>产品和内容推荐<br>。。。。。。</li>
</ul>
<p>机器学习有以下的专门术语：</p>
<ul>
<li>特征/属性</li>
<li>训练集</li>
<li>测试集</li>
<li>标签<br>。。。。。。</li>
</ul>
<!--more-->


<h1 id="机器学习任务"><a href="#机器学习任务" class="headerlink" title="机器学习任务"></a>机器学习任务</h1><p>机器学习根据任务的不同可以分为分类和回归：</p>
<ol>
<li>分类：将实例数据划分到合适的分类中</li>
<li>回归：用于预测数值型数据</li>
</ol>
<p>机器学习根据数据的不同也可分为监督学习和无监督学习：</p>
<ol>
<li>监督学习：数据有标签，可以通过研究训练集特征和标签之间的关系来预测数据</li>
<li>无监督学习：初始数据没有标签值，其中又分为两类：<ul>
<li>将数据集合分成由类似的对象组成的多个类的过程被称为<strong>聚类</strong></li>
<li>将寻找描述数据统计值的过程称之为<strong>密度估计</strong>  </li>
</ul>
</li>
</ol>
<h1 id="又是一个一级标题"><a href="#又是一个一级标题" class="headerlink" title="又是一个一级标题"></a>又是一个一级标题</h1><p></p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习、入门</tag>
      </tags>
  </entry>
  <entry>
    <title>黑苹果</title>
    <url>/2020/07/03/%E9%BB%91%E8%8B%B9%E6%9E%9C/</url>
    <content><![CDATA[<h1 id="一、什么是黑苹果"><a href="#一、什么是黑苹果" class="headerlink" title="一、什么是黑苹果?"></a>一、什么是黑苹果?</h1><p>在非苹果设备上运行 <strong>macos</strong><br>原因我分为两类：</p>
<ol>
<li>不够（或者不舍得）买苹果电脑的钱</li>
<li>单纯的喜欢折腾</li>
</ol>
<p>目的有以下几条：</p>
<ul>
<li>体验 <strong>macos</strong> 系统下优秀的视频创作环境（非视频创作者，道听途说而已），例如 Final Cut Pro</li>
<li>已有苹果的其他产品，想体验完整的苹果生态，随航、接力和”一响全响“的通知。。。。。。。<a id="more"></a></li>
<li>作为主系统体验 <strong>unix</strong> 环境下的代码编辑工作或者 <strong>IOS</strong> 开发</li>
<li>体验 <strong>macos</strong> 下漂亮的 UI 设计，喜欢 macos 下的流畅运行</li>
</ul>
<hr>
<h1 id="二、如何安装黑苹果？"><a href="#二、如何安装黑苹果？" class="headerlink" title="二、如何安装黑苹果？"></a>二、如何安装黑苹果？</h1><p>安装黑苹果途径有两种（两个极端）：</p>
<ol>
<li>自己学习安装</li>
</ol>
<ul>
<li>优点：可以学习<strong>知识</strong>（好好学习天天向上）、黑苹果更加定制化和完美、<strong>目前</strong>可以自行进行系统的升级而不怕系统崩溃</li>
<li>缺点：耗费时间（有学习成本）、系统经常蹦（有可能造成数据丢失）、可能会掉头发。。。。。。</li>
<li>要求：最好从事计算机相关专业或者了解这一方面，拥有较为充足的学习资源，例如远景论坛账号、会用 GitHub、有一定英文水平</li>
</ul>
<ol start="2">
<li>他人帮助安装</li>
</ol>
<ul>
<li>优点：没有时间学习成本，有钱或者有人就行</li>
<li>缺点：比较费钱，系统不能随意升级（容易崩掉，然后自己又不会弄，只能再次花钱），黑苹果完整度也不够</li>
<li>要求：有钱</li>
</ul>
<p>安装黑苹果教程视不同机器、不同型号、不同要求，难易程度以及流程各不相同，这里不会详细介绍，因为脱离了实际去讨论感觉不太实际。这里只给一些简要意见和建议：</p>
<ol>
<li>越主流的机型安装起来越方便</li>
<li>安装 <strong>macos</strong> 单系统，推荐直接上 <strong>opencore</strong> 引导，详情参考 <a href="https://blog.daliansky.net/OpenCore-BootLoader.html" target="_blank" rel="noopener">黑果小兵精解opencore</a></li>
<li>安装双系统，推荐 <strong>Clover</strong> 引导，简单方便，详情参考 <a href="https://blog.daliansky.net/clover-user-manual.html" target="_blank" rel="noopener">Clover使用教程</a></li>
<li>一般来说台式机安装黑苹果要比笔记本简单</li>
<li>要想驱动部分 <strong>N</strong> 卡（独立显卡），只能安装老一点的 <strong>macos</strong>系统（10.13），笔记本大部分的 <strong>A</strong> 卡也驱动不了，详情参考 <a href="https://blog.daliansky.net/Mojave-Hardware-Support-List.html" target="_blank" rel="noopener">黑果小兵</a> </li>
<li>如果自行学习安装，遇到问题不会解决，可以前往远景论坛。远景论坛需要邀请码才能注册，可以去某宝购入。国内的黑苹果阵地基本上都在这儿了。</li>
<li>或者加入QQ群，直接搜索关键字 “黑苹果”、“黑果”等等，在群里提问，基本上有人会应答你</li>
<li>有的时候需要下载某个驱动，你可以到QQ群（有的群会上传驱动）、远景论坛搜索或者直接去 <strong>github</strong> 搜索<a href="https://github.com/acidanthera" target="_blank" rel="noopener">acidanthera</a>（acidanthera是现在黑苹果核心驱动的维护团队，以前好像是rehabman，都是大佬啊！！！）。</li>
<li>！！！忠告！！！：不想学习费事学习安装黑苹果的千万不要自行随便升级系统，容易崩（把系统自动升级关了）。</li>
</ol>
<hr>
<h1 id="三、由-WWDC2020-浅谈黑苹果的未来"><a href="#三、由-WWDC2020-浅谈黑苹果的未来" class="headerlink" title="三、由 WWDC2020 浅谈黑苹果的未来"></a>三、由 WWDC2020 浅谈黑苹果的未来</h1><p>WWDC2020中，苹果宣布计划花<strong>两年</strong>的时间将苹果电脑使用的芯片由 intel 转为自家的 A 系列芯片。并发布了新版的11.0系统 <strong>big sur</strong>。<br>以上举动对于黑苹果的影响：在苹果替换了自家的 A 系列芯片后，苹果电脑的定制化程度越来越高，基本上电脑的零部件都是自家生产的了。使得 macos 与其他电脑在硬件上不是很符合。所以，最终的结果是：两年左右之内发布的苹果系统还都是可以黑的，一担完全抛弃 intel 后发布的苹果系统就基本无望了。但这不代表不能黑苹果，毕竟可以安装老版本的黑苹果系统</p>
]]></content>
  </entry>
</search>
